/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.model.ChatCompletionRequestToolsInner;
import com.telnyx.sdk.model.ChatCompletionSystemMessageParam;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * ChatCompletionRequest
 */
@JsonPropertyOrder({
  ChatCompletionRequest.JSON_PROPERTY_MESSAGES,
  ChatCompletionRequest.JSON_PROPERTY_MODEL,
  ChatCompletionRequest.JSON_PROPERTY_STREAM,
  ChatCompletionRequest.JSON_PROPERTY_MAX_TOKENS,
  ChatCompletionRequest.JSON_PROPERTY_TEMPERATURE,
  ChatCompletionRequest.JSON_PROPERTY_MIN_P,
  ChatCompletionRequest.JSON_PROPERTY_N,
  ChatCompletionRequest.JSON_PROPERTY_TOOLS,
  ChatCompletionRequest.JSON_PROPERTY_TOOL_CHOICE,
  ChatCompletionRequest.JSON_PROPERTY_USE_BEAM_SEARCH,
  ChatCompletionRequest.JSON_PROPERTY_BEST_OF,
  ChatCompletionRequest.JSON_PROPERTY_LENGTH_PENALTY,
  ChatCompletionRequest.JSON_PROPERTY_EARLY_STOPPING,
  ChatCompletionRequest.JSON_PROPERTY_FREQUENCY_PENALTY,
  ChatCompletionRequest.JSON_PROPERTY_PRESENCE_PENALTY,
  ChatCompletionRequest.JSON_PROPERTY_TOP_P,
  ChatCompletionRequest.JSON_PROPERTY_OPENAI_API_KEY
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class ChatCompletionRequest {
  public static final String JSON_PROPERTY_MESSAGES = "messages";
  private List<ChatCompletionSystemMessageParam> messages = new ArrayList<>();

  public static final String JSON_PROPERTY_MODEL = "model";
  private String model = "NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO";

  public static final String JSON_PROPERTY_STREAM = "stream";
  private Boolean stream = false;

  public static final String JSON_PROPERTY_MAX_TOKENS = "max_tokens";
  private Integer maxTokens;

  public static final String JSON_PROPERTY_TEMPERATURE = "temperature";
  private BigDecimal temperature;

  public static final String JSON_PROPERTY_MIN_P = "min_p";
  private BigDecimal minP;

  public static final String JSON_PROPERTY_N = "n";
  private BigDecimal n;

  public static final String JSON_PROPERTY_TOOLS = "tools";
  private List<ChatCompletionRequestToolsInner> tools = null;

  /**
   * Gets or Sets toolChoice
   */
  public enum ToolChoiceEnum {
    NONE("none"),
    
    AUTO("auto");

    private String value;

    ToolChoiceEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ToolChoiceEnum fromValue(String value) {
      for (ToolChoiceEnum b : ToolChoiceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TOOL_CHOICE = "tool_choice";
  private ToolChoiceEnum toolChoice;

  public static final String JSON_PROPERTY_USE_BEAM_SEARCH = "use_beam_search";
  private Boolean useBeamSearch = false;

  public static final String JSON_PROPERTY_BEST_OF = "best_of";
  private Integer bestOf;

  public static final String JSON_PROPERTY_LENGTH_PENALTY = "length_penalty";
  private BigDecimal lengthPenalty = new BigDecimal("1.0");

  public static final String JSON_PROPERTY_EARLY_STOPPING = "early_stopping";
  private Boolean earlyStopping = false;

  public static final String JSON_PROPERTY_FREQUENCY_PENALTY = "frequency_penalty";
  private BigDecimal frequencyPenalty = new BigDecimal("0.0");

  public static final String JSON_PROPERTY_PRESENCE_PENALTY = "presence_penalty";
  private BigDecimal presencePenalty = new BigDecimal("0.0");

  public static final String JSON_PROPERTY_TOP_P = "top_p";
  private BigDecimal topP;

  public static final String JSON_PROPERTY_OPENAI_API_KEY = "openai_api_key";
  private String openaiApiKey;

  public ChatCompletionRequest() { 
  }

  public ChatCompletionRequest messages(List<ChatCompletionSystemMessageParam> messages) {
    this.messages = messages;
    return this;
  }

  public ChatCompletionRequest addMessagesItem(ChatCompletionSystemMessageParam messagesItem) {
    this.messages.add(messagesItem);
    return this;
  }

   /**
   * A list of the previous chat messages for context.
   * @return messages
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(example = "[{\"role\":\"system\",\"content\":\"You are a friendly chatbot.\"},{\"role\":\"user\",\"content\":\"Hello, world!\"}]", required = true, value = "A list of the previous chat messages for context.")
  @JsonProperty(JSON_PROPERTY_MESSAGES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ChatCompletionSystemMessageParam> getMessages() {
    return messages;
  }


  @JsonProperty(JSON_PROPERTY_MESSAGES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMessages(List<ChatCompletionSystemMessageParam> messages) {
    this.messages = messages;
  }


  public ChatCompletionRequest model(String model) {
    this.model = model;
    return this;
  }

   /**
   * The language model to chat with. If you are optimizing for speed, try [mistralai/Mistral-7B-Instruct-v0.1](https://huggingface.co/mistralai/Mistral-7B-Instruct-v0.1). For quality, try [NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO](https://huggingface.co/NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO)
   * @return model
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The language model to chat with. If you are optimizing for speed, try [mistralai/Mistral-7B-Instruct-v0.1](https://huggingface.co/mistralai/Mistral-7B-Instruct-v0.1). For quality, try [NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO](https://huggingface.co/NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO)")
  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getModel() {
    return model;
  }


  @JsonProperty(JSON_PROPERTY_MODEL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModel(String model) {
    this.model = model;
  }


  public ChatCompletionRequest stream(Boolean stream) {
    this.stream = stream;
    return this;
  }

   /**
   * Whether or not to stream data-only server-sent events as they become available.
   * @return stream
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Whether or not to stream data-only server-sent events as they become available.")
  @JsonProperty(JSON_PROPERTY_STREAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getStream() {
    return stream;
  }


  @JsonProperty(JSON_PROPERTY_STREAM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStream(Boolean stream) {
    this.stream = stream;
  }


  public ChatCompletionRequest maxTokens(Integer maxTokens) {
    this.maxTokens = maxTokens;
    return this;
  }

   /**
   * Maximum number of completion tokens the model should generate.
   * @return maxTokens
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "128", value = "Maximum number of completion tokens the model should generate.")
  @JsonProperty(JSON_PROPERTY_MAX_TOKENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getMaxTokens() {
    return maxTokens;
  }


  @JsonProperty(JSON_PROPERTY_MAX_TOKENS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMaxTokens(Integer maxTokens) {
    this.maxTokens = maxTokens;
  }


  public ChatCompletionRequest temperature(BigDecimal temperature) {
    this.temperature = temperature;
    return this;
  }

   /**
   * Adjusts the \&quot;creativity\&quot; of the model. Lower values make the model more deterministic and repetitive, while higher values make the model more random and creative.
   * @return temperature
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.8", value = "Adjusts the \"creativity\" of the model. Lower values make the model more deterministic and repetitive, while higher values make the model more random and creative.")
  @JsonProperty(JSON_PROPERTY_TEMPERATURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTemperature() {
    return temperature;
  }


  @JsonProperty(JSON_PROPERTY_TEMPERATURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTemperature(BigDecimal temperature) {
    this.temperature = temperature;
  }


  public ChatCompletionRequest minP(BigDecimal minP) {
    this.minP = minP;
    return this;
  }

   /**
   * This is an alternative to &#x60;temperature&#x60; that [many prefer](https://github.com/huggingface/transformers/issues/27670). Must be in [0, 1].
   * @return minP
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "0.1", value = "This is an alternative to `temperature` that [many prefer](https://github.com/huggingface/transformers/issues/27670). Must be in [0, 1].")
  @JsonProperty(JSON_PROPERTY_MIN_P)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getMinP() {
    return minP;
  }


  @JsonProperty(JSON_PROPERTY_MIN_P)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMinP(BigDecimal minP) {
    this.minP = minP;
  }


  public ChatCompletionRequest n(BigDecimal n) {
    this.n = n;
    return this;
  }

   /**
   * This will return multiple choices for you instead of a single chat completion.
   * @return n
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2", value = "This will return multiple choices for you instead of a single chat completion.")
  @JsonProperty(JSON_PROPERTY_N)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getN() {
    return n;
  }


  @JsonProperty(JSON_PROPERTY_N)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setN(BigDecimal n) {
    this.n = n;
  }


  public ChatCompletionRequest tools(List<ChatCompletionRequestToolsInner> tools) {
    this.tools = tools;
    return this;
  }

  public ChatCompletionRequest addToolsItem(ChatCompletionRequestToolsInner toolsItem) {
    if (this.tools == null) {
      this.tools = new ArrayList<>();
    }
    this.tools.add(toolsItem);
    return this;
  }

   /**
   * The &#x60;retrieval&#x60; tool type is unique to Telnyx. You may pass a list of [embedded storage buckets](https://developers.telnyx.com/api/inference/inference-embedding/post-embedding) for retrieval-augmented generation.
   * @return tools
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "The `retrieval` tool type is unique to Telnyx. You may pass a list of [embedded storage buckets](https://developers.telnyx.com/api/inference/inference-embedding/post-embedding) for retrieval-augmented generation.")
  @JsonProperty(JSON_PROPERTY_TOOLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ChatCompletionRequestToolsInner> getTools() {
    return tools;
  }


  @JsonProperty(JSON_PROPERTY_TOOLS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTools(List<ChatCompletionRequestToolsInner> tools) {
    this.tools = tools;
  }


  public ChatCompletionRequest toolChoice(ToolChoiceEnum toolChoice) {
    this.toolChoice = toolChoice;
    return this;
  }

   /**
   * Get toolChoice
   * @return toolChoice
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TOOL_CHOICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ToolChoiceEnum getToolChoice() {
    return toolChoice;
  }


  @JsonProperty(JSON_PROPERTY_TOOL_CHOICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToolChoice(ToolChoiceEnum toolChoice) {
    this.toolChoice = toolChoice;
  }


  public ChatCompletionRequest useBeamSearch(Boolean useBeamSearch) {
    this.useBeamSearch = useBeamSearch;
    return this;
  }

   /**
   * Setting this to &#x60;true&#x60; will allow the model to [explore more completion options](https://huggingface.co/blog/how-to-generate#beam-search). This is not supported by OpenAI.
   * @return useBeamSearch
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Setting this to `true` will allow the model to [explore more completion options](https://huggingface.co/blog/how-to-generate#beam-search). This is not supported by OpenAI.")
  @JsonProperty(JSON_PROPERTY_USE_BEAM_SEARCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getUseBeamSearch() {
    return useBeamSearch;
  }


  @JsonProperty(JSON_PROPERTY_USE_BEAM_SEARCH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUseBeamSearch(Boolean useBeamSearch) {
    this.useBeamSearch = useBeamSearch;
  }


  public ChatCompletionRequest bestOf(Integer bestOf) {
    this.bestOf = bestOf;
    return this;
  }

   /**
   * This is used with &#x60;use_beam_search&#x60; to determine how many candidate beams to explore.
   * @return bestOf
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2", value = "This is used with `use_beam_search` to determine how many candidate beams to explore.")
  @JsonProperty(JSON_PROPERTY_BEST_OF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getBestOf() {
    return bestOf;
  }


  @JsonProperty(JSON_PROPERTY_BEST_OF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBestOf(Integer bestOf) {
    this.bestOf = bestOf;
  }


  public ChatCompletionRequest lengthPenalty(BigDecimal lengthPenalty) {
    this.lengthPenalty = lengthPenalty;
    return this;
  }

   /**
   * This is used with &#x60;use_beam_search&#x60; to prefer shorter or longer completions.
   * @return lengthPenalty
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "This is used with `use_beam_search` to prefer shorter or longer completions.")
  @JsonProperty(JSON_PROPERTY_LENGTH_PENALTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getLengthPenalty() {
    return lengthPenalty;
  }


  @JsonProperty(JSON_PROPERTY_LENGTH_PENALTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLengthPenalty(BigDecimal lengthPenalty) {
    this.lengthPenalty = lengthPenalty;
  }


  public ChatCompletionRequest earlyStopping(Boolean earlyStopping) {
    this.earlyStopping = earlyStopping;
    return this;
  }

   /**
   * This is used with &#x60;use_beam_search&#x60;. If &#x60;true&#x60;, generation stops as soon as there are &#x60;best_of&#x60; complete candidates; if &#x60;false&#x60;, a heuristic is applied and the generation stops when is it very unlikely to find better candidates.
   * @return earlyStopping
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "This is used with `use_beam_search`. If `true`, generation stops as soon as there are `best_of` complete candidates; if `false`, a heuristic is applied and the generation stops when is it very unlikely to find better candidates.")
  @JsonProperty(JSON_PROPERTY_EARLY_STOPPING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getEarlyStopping() {
    return earlyStopping;
  }


  @JsonProperty(JSON_PROPERTY_EARLY_STOPPING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEarlyStopping(Boolean earlyStopping) {
    this.earlyStopping = earlyStopping;
  }


  public ChatCompletionRequest frequencyPenalty(BigDecimal frequencyPenalty) {
    this.frequencyPenalty = frequencyPenalty;
    return this;
  }

   /**
   * Higher values will penalize the model from repeating the same output tokens.
   * @return frequencyPenalty
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1.5", value = "Higher values will penalize the model from repeating the same output tokens.")
  @JsonProperty(JSON_PROPERTY_FREQUENCY_PENALTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getFrequencyPenalty() {
    return frequencyPenalty;
  }


  @JsonProperty(JSON_PROPERTY_FREQUENCY_PENALTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFrequencyPenalty(BigDecimal frequencyPenalty) {
    this.frequencyPenalty = frequencyPenalty;
  }


  public ChatCompletionRequest presencePenalty(BigDecimal presencePenalty) {
    this.presencePenalty = presencePenalty;
    return this;
  }

   /**
   * Higher values will penalize the model from repeating the same output tokens.
   * @return presencePenalty
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1.5", value = "Higher values will penalize the model from repeating the same output tokens.")
  @JsonProperty(JSON_PROPERTY_PRESENCE_PENALTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getPresencePenalty() {
    return presencePenalty;
  }


  @JsonProperty(JSON_PROPERTY_PRESENCE_PENALTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPresencePenalty(BigDecimal presencePenalty) {
    this.presencePenalty = presencePenalty;
  }


  public ChatCompletionRequest topP(BigDecimal topP) {
    this.topP = topP;
    return this;
  }

   /**
   * An alternative to &#x60;temperature&#x60;.
   * @return topP
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "An alternative to `temperature`.")
  @JsonProperty(JSON_PROPERTY_TOP_P)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTopP() {
    return topP;
  }


  @JsonProperty(JSON_PROPERTY_TOP_P)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTopP(BigDecimal topP) {
    this.topP = topP;
  }


  public ChatCompletionRequest openaiApiKey(String openaiApiKey) {
    this.openaiApiKey = openaiApiKey;
    return this;
  }

   /**
   * If you are using OpenAI models using our API, this is how you pass along your OpenAI API key.
   * @return openaiApiKey
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "If you are using OpenAI models using our API, this is how you pass along your OpenAI API key.")
  @JsonProperty(JSON_PROPERTY_OPENAI_API_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOpenaiApiKey() {
    return openaiApiKey;
  }


  @JsonProperty(JSON_PROPERTY_OPENAI_API_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOpenaiApiKey(String openaiApiKey) {
    this.openaiApiKey = openaiApiKey;
  }


  /**
   * Return true if this ChatCompletionRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChatCompletionRequest chatCompletionRequest = (ChatCompletionRequest) o;
    return Objects.equals(this.messages, chatCompletionRequest.messages) &&
        Objects.equals(this.model, chatCompletionRequest.model) &&
        Objects.equals(this.stream, chatCompletionRequest.stream) &&
        Objects.equals(this.maxTokens, chatCompletionRequest.maxTokens) &&
        Objects.equals(this.temperature, chatCompletionRequest.temperature) &&
        Objects.equals(this.minP, chatCompletionRequest.minP) &&
        Objects.equals(this.n, chatCompletionRequest.n) &&
        Objects.equals(this.tools, chatCompletionRequest.tools) &&
        Objects.equals(this.toolChoice, chatCompletionRequest.toolChoice) &&
        Objects.equals(this.useBeamSearch, chatCompletionRequest.useBeamSearch) &&
        Objects.equals(this.bestOf, chatCompletionRequest.bestOf) &&
        Objects.equals(this.lengthPenalty, chatCompletionRequest.lengthPenalty) &&
        Objects.equals(this.earlyStopping, chatCompletionRequest.earlyStopping) &&
        Objects.equals(this.frequencyPenalty, chatCompletionRequest.frequencyPenalty) &&
        Objects.equals(this.presencePenalty, chatCompletionRequest.presencePenalty) &&
        Objects.equals(this.topP, chatCompletionRequest.topP) &&
        Objects.equals(this.openaiApiKey, chatCompletionRequest.openaiApiKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messages, model, stream, maxTokens, temperature, minP, n, tools, toolChoice, useBeamSearch, bestOf, lengthPenalty, earlyStopping, frequencyPenalty, presencePenalty, topP, openaiApiKey);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChatCompletionRequest {\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    model: ").append(toIndentedString(model)).append("\n");
    sb.append("    stream: ").append(toIndentedString(stream)).append("\n");
    sb.append("    maxTokens: ").append(toIndentedString(maxTokens)).append("\n");
    sb.append("    temperature: ").append(toIndentedString(temperature)).append("\n");
    sb.append("    minP: ").append(toIndentedString(minP)).append("\n");
    sb.append("    n: ").append(toIndentedString(n)).append("\n");
    sb.append("    tools: ").append(toIndentedString(tools)).append("\n");
    sb.append("    toolChoice: ").append(toIndentedString(toolChoice)).append("\n");
    sb.append("    useBeamSearch: ").append(toIndentedString(useBeamSearch)).append("\n");
    sb.append("    bestOf: ").append(toIndentedString(bestOf)).append("\n");
    sb.append("    lengthPenalty: ").append(toIndentedString(lengthPenalty)).append("\n");
    sb.append("    earlyStopping: ").append(toIndentedString(earlyStopping)).append("\n");
    sb.append("    frequencyPenalty: ").append(toIndentedString(frequencyPenalty)).append("\n");
    sb.append("    presencePenalty: ").append(toIndentedString(presencePenalty)).append("\n");
    sb.append("    topP: ").append(toIndentedString(topP)).append("\n");
    sb.append("    openaiApiKey: ").append(toIndentedString(openaiApiKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

