/*
 * Telnyx API
 * SIP trunking, SMS, MMS, Call Control and Telephony Data Services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@telnyx.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.telnyx.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.telnyx.sdk.model.CustomSipHeader;
import com.telnyx.sdk.model.SipHeader;
import com.telnyx.sdk.model.SoundModifications;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.telnyx.sdk.JSON;


/**
 * AnswerRequest
 */
@JsonPropertyOrder({
  AnswerRequest.JSON_PROPERTY_BILLING_GROUP_ID,
  AnswerRequest.JSON_PROPERTY_CLIENT_STATE,
  AnswerRequest.JSON_PROPERTY_COMMAND_ID,
  AnswerRequest.JSON_PROPERTY_CUSTOM_HEADERS,
  AnswerRequest.JSON_PROPERTY_SIP_HEADERS,
  AnswerRequest.JSON_PROPERTY_SOUND_MODIFICATIONS,
  AnswerRequest.JSON_PROPERTY_STREAM_URL,
  AnswerRequest.JSON_PROPERTY_STREAM_TRACK,
  AnswerRequest.JSON_PROPERTY_SEND_SILENCE_WHEN_IDLE,
  AnswerRequest.JSON_PROPERTY_WEBHOOK_URL,
  AnswerRequest.JSON_PROPERTY_WEBHOOK_URL_METHOD
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class AnswerRequest {
  public static final String JSON_PROPERTY_BILLING_GROUP_ID = "billing_group_id";
  private UUID billingGroupId;

  public static final String JSON_PROPERTY_CLIENT_STATE = "client_state";
  private String clientState;

  public static final String JSON_PROPERTY_COMMAND_ID = "command_id";
  private String commandId;

  public static final String JSON_PROPERTY_CUSTOM_HEADERS = "custom_headers";
  private List<CustomSipHeader> customHeaders = null;

  public static final String JSON_PROPERTY_SIP_HEADERS = "sip_headers";
  private List<SipHeader> sipHeaders = null;

  public static final String JSON_PROPERTY_SOUND_MODIFICATIONS = "sound_modifications";
  private SoundModifications soundModifications;

  public static final String JSON_PROPERTY_STREAM_URL = "stream_url";
  private String streamUrl;

  /**
   * Specifies which track should be streamed.
   */
  public enum StreamTrackEnum {
    INBOUND_TRACK("inbound_track"),
    
    OUTBOUND_TRACK("outbound_track"),
    
    BOTH_TRACKS("both_tracks");

    private String value;

    StreamTrackEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StreamTrackEnum fromValue(String value) {
      for (StreamTrackEnum b : StreamTrackEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STREAM_TRACK = "stream_track";
  private StreamTrackEnum streamTrack = StreamTrackEnum.INBOUND_TRACK;

  public static final String JSON_PROPERTY_SEND_SILENCE_WHEN_IDLE = "send_silence_when_idle";
  private Boolean sendSilenceWhenIdle = false;

  public static final String JSON_PROPERTY_WEBHOOK_URL = "webhook_url";
  private String webhookUrl;

  /**
   * HTTP request type used for &#x60;webhook_url&#x60;.
   */
  public enum WebhookUrlMethodEnum {
    POST("POST"),
    
    GET("GET");

    private String value;

    WebhookUrlMethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static WebhookUrlMethodEnum fromValue(String value) {
      for (WebhookUrlMethodEnum b : WebhookUrlMethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_WEBHOOK_URL_METHOD = "webhook_url_method";
  private WebhookUrlMethodEnum webhookUrlMethod = WebhookUrlMethodEnum.POST;

  public AnswerRequest() { 
  }

  public AnswerRequest billingGroupId(UUID billingGroupId) {
    this.billingGroupId = billingGroupId;
    return this;
  }

   /**
   * Use this field to set the Billing Group ID for the call. Must be a valid and existing Billing Group ID.
   * @return billingGroupId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "f5586561-8ff0-4291-a0ac-84fe544797bd", value = "Use this field to set the Billing Group ID for the call. Must be a valid and existing Billing Group ID.")
  @JsonProperty(JSON_PROPERTY_BILLING_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getBillingGroupId() {
    return billingGroupId;
  }


  @JsonProperty(JSON_PROPERTY_BILLING_GROUP_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBillingGroupId(UUID billingGroupId) {
    this.billingGroupId = billingGroupId;
  }


  public AnswerRequest clientState(String clientState) {
    this.clientState = clientState;
    return this;
  }

   /**
   * Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.
   * @return clientState
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "aGF2ZSBhIG5pY2UgZGF5ID1d", value = "Use this field to add state to every subsequent webhook. It must be a valid Base-64 encoded string.")
  @JsonProperty(JSON_PROPERTY_CLIENT_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClientState() {
    return clientState;
  }


  @JsonProperty(JSON_PROPERTY_CLIENT_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClientState(String clientState) {
    this.clientState = clientState;
  }


  public AnswerRequest commandId(String commandId) {
    this.commandId = commandId;
    return this;
  }

   /**
   * Use this field to avoid duplicate commands. Telnyx will ignore any command with the same &#x60;command_id&#x60; for the same &#x60;call_control_id&#x60;.
   * @return commandId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "891510ac-f3e4-11e8-af5b-de00688a4901", value = "Use this field to avoid duplicate commands. Telnyx will ignore any command with the same `command_id` for the same `call_control_id`.")
  @JsonProperty(JSON_PROPERTY_COMMAND_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCommandId() {
    return commandId;
  }


  @JsonProperty(JSON_PROPERTY_COMMAND_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCommandId(String commandId) {
    this.commandId = commandId;
  }


  public AnswerRequest customHeaders(List<CustomSipHeader> customHeaders) {
    this.customHeaders = customHeaders;
    return this;
  }

  public AnswerRequest addCustomHeadersItem(CustomSipHeader customHeadersItem) {
    if (this.customHeaders == null) {
      this.customHeaders = new ArrayList<>();
    }
    this.customHeaders.add(customHeadersItem);
    return this;
  }

   /**
   * Custom headers to be added to the SIP INVITE response.
   * @return customHeaders
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "[{\"name\":\"head_1\",\"value\":\"val_1\"},{\"name\":\"head_2\",\"value\":\"val_2\"}]", value = "Custom headers to be added to the SIP INVITE response.")
  @JsonProperty(JSON_PROPERTY_CUSTOM_HEADERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CustomSipHeader> getCustomHeaders() {
    return customHeaders;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOM_HEADERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCustomHeaders(List<CustomSipHeader> customHeaders) {
    this.customHeaders = customHeaders;
  }


  public AnswerRequest sipHeaders(List<SipHeader> sipHeaders) {
    this.sipHeaders = sipHeaders;
    return this;
  }

  public AnswerRequest addSipHeadersItem(SipHeader sipHeadersItem) {
    if (this.sipHeaders == null) {
      this.sipHeaders = new ArrayList<>();
    }
    this.sipHeaders.add(sipHeadersItem);
    return this;
  }

   /**
   * SIP headers to be added to the SIP INVITE response. Currently only User-to-User header is supported.
   * @return sipHeaders
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "[{\"name\":\"User-to-User\",\"value\":\"value\"}]", value = "SIP headers to be added to the SIP INVITE response. Currently only User-to-User header is supported.")
  @JsonProperty(JSON_PROPERTY_SIP_HEADERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<SipHeader> getSipHeaders() {
    return sipHeaders;
  }


  @JsonProperty(JSON_PROPERTY_SIP_HEADERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSipHeaders(List<SipHeader> sipHeaders) {
    this.sipHeaders = sipHeaders;
  }


  public AnswerRequest soundModifications(SoundModifications soundModifications) {
    this.soundModifications = soundModifications;
    return this;
  }

   /**
   * Get soundModifications
   * @return soundModifications
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SOUND_MODIFICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SoundModifications getSoundModifications() {
    return soundModifications;
  }


  @JsonProperty(JSON_PROPERTY_SOUND_MODIFICATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSoundModifications(SoundModifications soundModifications) {
    this.soundModifications = soundModifications;
  }


  public AnswerRequest streamUrl(String streamUrl) {
    this.streamUrl = streamUrl;
    return this;
  }

   /**
   * The destination WebSocket address where the stream is going to be delivered.
   * @return streamUrl
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "wss://www.example.com/websocket", value = "The destination WebSocket address where the stream is going to be delivered.")
  @JsonProperty(JSON_PROPERTY_STREAM_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStreamUrl() {
    return streamUrl;
  }


  @JsonProperty(JSON_PROPERTY_STREAM_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStreamUrl(String streamUrl) {
    this.streamUrl = streamUrl;
  }


  public AnswerRequest streamTrack(StreamTrackEnum streamTrack) {
    this.streamTrack = streamTrack;
    return this;
  }

   /**
   * Specifies which track should be streamed.
   * @return streamTrack
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "both_tracks", value = "Specifies which track should be streamed.")
  @JsonProperty(JSON_PROPERTY_STREAM_TRACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StreamTrackEnum getStreamTrack() {
    return streamTrack;
  }


  @JsonProperty(JSON_PROPERTY_STREAM_TRACK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStreamTrack(StreamTrackEnum streamTrack) {
    this.streamTrack = streamTrack;
  }


  public AnswerRequest sendSilenceWhenIdle(Boolean sendSilenceWhenIdle) {
    this.sendSilenceWhenIdle = sendSilenceWhenIdle;
    return this;
  }

   /**
   * Generate silence RTP packets when no transmission available.
   * @return sendSilenceWhenIdle
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "true", value = "Generate silence RTP packets when no transmission available.")
  @JsonProperty(JSON_PROPERTY_SEND_SILENCE_WHEN_IDLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSendSilenceWhenIdle() {
    return sendSilenceWhenIdle;
  }


  @JsonProperty(JSON_PROPERTY_SEND_SILENCE_WHEN_IDLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSendSilenceWhenIdle(Boolean sendSilenceWhenIdle) {
    this.sendSilenceWhenIdle = sendSilenceWhenIdle;
  }


  public AnswerRequest webhookUrl(String webhookUrl) {
    this.webhookUrl = webhookUrl;
    return this;
  }

   /**
   * Use this field to override the URL for which Telnyx will send subsequent webhooks to for this call.
   * @return webhookUrl
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "https://www.example.com/server-b/", value = "Use this field to override the URL for which Telnyx will send subsequent webhooks to for this call.")
  @JsonProperty(JSON_PROPERTY_WEBHOOK_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getWebhookUrl() {
    return webhookUrl;
  }


  @JsonProperty(JSON_PROPERTY_WEBHOOK_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebhookUrl(String webhookUrl) {
    this.webhookUrl = webhookUrl;
  }


  public AnswerRequest webhookUrlMethod(WebhookUrlMethodEnum webhookUrlMethod) {
    this.webhookUrlMethod = webhookUrlMethod;
    return this;
  }

   /**
   * HTTP request type used for &#x60;webhook_url&#x60;.
   * @return webhookUrlMethod
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "GET", value = "HTTP request type used for `webhook_url`.")
  @JsonProperty(JSON_PROPERTY_WEBHOOK_URL_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public WebhookUrlMethodEnum getWebhookUrlMethod() {
    return webhookUrlMethod;
  }


  @JsonProperty(JSON_PROPERTY_WEBHOOK_URL_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebhookUrlMethod(WebhookUrlMethodEnum webhookUrlMethod) {
    this.webhookUrlMethod = webhookUrlMethod;
  }


  /**
   * Return true if this AnswerRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnswerRequest answerRequest = (AnswerRequest) o;
    return Objects.equals(this.billingGroupId, answerRequest.billingGroupId) &&
        Objects.equals(this.clientState, answerRequest.clientState) &&
        Objects.equals(this.commandId, answerRequest.commandId) &&
        Objects.equals(this.customHeaders, answerRequest.customHeaders) &&
        Objects.equals(this.sipHeaders, answerRequest.sipHeaders) &&
        Objects.equals(this.soundModifications, answerRequest.soundModifications) &&
        Objects.equals(this.streamUrl, answerRequest.streamUrl) &&
        Objects.equals(this.streamTrack, answerRequest.streamTrack) &&
        Objects.equals(this.sendSilenceWhenIdle, answerRequest.sendSilenceWhenIdle) &&
        Objects.equals(this.webhookUrl, answerRequest.webhookUrl) &&
        Objects.equals(this.webhookUrlMethod, answerRequest.webhookUrlMethod);
  }

  @Override
  public int hashCode() {
    return Objects.hash(billingGroupId, clientState, commandId, customHeaders, sipHeaders, soundModifications, streamUrl, streamTrack, sendSilenceWhenIdle, webhookUrl, webhookUrlMethod);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnswerRequest {\n");
    sb.append("    billingGroupId: ").append(toIndentedString(billingGroupId)).append("\n");
    sb.append("    clientState: ").append(toIndentedString(clientState)).append("\n");
    sb.append("    commandId: ").append(toIndentedString(commandId)).append("\n");
    sb.append("    customHeaders: ").append(toIndentedString(customHeaders)).append("\n");
    sb.append("    sipHeaders: ").append(toIndentedString(sipHeaders)).append("\n");
    sb.append("    soundModifications: ").append(toIndentedString(soundModifications)).append("\n");
    sb.append("    streamUrl: ").append(toIndentedString(streamUrl)).append("\n");
    sb.append("    streamTrack: ").append(toIndentedString(streamTrack)).append("\n");
    sb.append("    sendSilenceWhenIdle: ").append(toIndentedString(sendSilenceWhenIdle)).append("\n");
    sb.append("    webhookUrl: ").append(toIndentedString(webhookUrl)).append("\n");
    sb.append("    webhookUrlMethod: ").append(toIndentedString(webhookUrlMethod)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

